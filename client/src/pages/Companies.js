import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { getCompanies, deleteCompany } from '../services/api';

function Companies() {
  const [companies, setCompanies] = useState([]);
  const [loading, setLoading] = useState(true);
  const [showAddForm, setShowAddForm] = useState(false);

  useEffect(() => {
    loadCompanies();
  }, []);

  const loadCompanies = async () => {
    try {
      const data = await getCompanies();
      setCompanies(data);
    } catch (error) {
      console.error('Error loading companies:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleDelete = async (id, name) => {
    if (!window.confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é "${name}"?`)) {
      return;
    }

    try {
      await deleteCompany(id);
      setCompanies(companies.filter(c => c.id !== id));
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏');
    }
  };

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  return (
    <div className="container">
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px' }}>
        <h2>–ú–æ–∏ –∫–æ–º–ø–∞–Ω–∏–∏</h2>
        <Link to="/companies/new" className="btn btn-primary">
          + –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é
        </Link>
      </div>

      {companies.length === 0 ? (
        <div className="card" style={{ textAlign: 'center', padding: '60px 20px' }}>
          <h3 style={{ marginBottom: '15px', color: '#666' }}>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–ø–∞–Ω–∏–π</h3>
          <p style={{ marginBottom: '30px', color: '#999' }}>
            –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à—É –ø–µ—Ä–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–∑—ã–≤–æ–≤
          </p>
          <Link to="/companies/new" className="btn btn-primary">
            –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é
          </Link>
        </div>
      ) : (
        <div>
          {companies.map(company => (
            <div key={company.id} className="company-card">
              <div className="company-header">
                <div>
                  <div className="company-name">{company.companyName}</div>
                  <div style={{ fontSize: '14px', color: '#999', marginTop: '5px' }}>
                    –°–æ–∑–¥–∞–Ω–∞: {new Date(company.created).toLocaleDateString('ru-RU')}
                  </div>
                </div>
                <span className={`company-status ${company.active ? 'active' : 'inactive'}`}>
                  {company.active ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                </span>
              </div>

              <div style={{ marginTop: '15px', color: '#666', fontSize: '14px' }}>
                <div style={{ marginBottom: '5px' }}>
                  {company.telegramActivated ? (
                    <span style={{ color: '#28a745' }}>
                      ‚úÖ Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (@{company.telegramUsername || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'})
                    </span>
                  ) : company.telegramActivationCode ? (
                    <span style={{ color: '#ffc107' }}>
                      ‚è≥ –û–∂–∏–¥–∞–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (–∫–æ–¥: {company.telegramActivationCode})
                    </span>
                  ) : (
                    <span>üì± Telegram: {company.telegramChatId ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω (—Å—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞)' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}</span>
                  )}
                </div>
                <div>
                  üîó API 2GIS: {company.twoGisApiUrl ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω'}
                </div>
              </div>

              <div className="company-actions">
                <Link to={`/companies/${company.id}`} className="btn btn-secondary">
                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </Link>
                <button 
                  onClick={() => handleDelete(company.id, company.companyName)}
                  className="btn btn-danger"
                >
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}

export default Companies;