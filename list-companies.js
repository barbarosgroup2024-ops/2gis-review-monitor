/**
 * –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–ø–∞–Ω–∏–π –≤ Supabase
 * –ó–∞–ø—É—Å–∫: node list-companies.js [email]
 */

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û–®–ò–ë–ö–ê: SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

const email = process.argv[2];

async function listCompanies() {
  try {
    let query = supabase
      .from('companies')
      .select(`
        *,
        users!inner(email, name)
      `)
      .order('created_at', { ascending: false });

    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω email, —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (email) {
      const { data: user } = await supabase
        .from('users')
        .select('id')
        .eq('email', email)
        .single();

      if (!user) {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', email);
        return;
      }

      query = query.eq('user_id', user.id);
    }

    const { data: companies, error } = await query;

    if (error) throw error;

    if (!companies || companies.length === 0) {
      console.log('üì≠ –ö–æ–º–ø–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      console.log('\nüí° –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000/companies/new');
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–ø–∞–Ω–∏–π: ${companies.length}\n`);
    console.log('‚ïê'.repeat(80));
    
    companies.forEach((company, index) => {
      console.log(`\n${index + 1}. ${company.company_name}`);
      console.log(`   ID: ${company.id}`);
      console.log(`   –í–ª–∞–¥–µ–ª–µ—Ü: ${company.users.name} (${company.users.email})`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${company.active ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}`);
      console.log(`   2GIS API: ${company.two_gis_api_url}`);
      if (company.telegram_bot_token) {
        console.log(`   Telegram: ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω`);
      }
      console.log(`   –°–æ–∑–¥–∞–Ω–∞: ${new Date(company.created_at).toLocaleString('ru-RU')}`);
    });
    
    console.log('\n' + '‚ïê'.repeat(80));
    
    if (companies.length > 0) {
      console.log('\nüí° –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
      console.log(`   node add-test-reviews.js ${companies[0].id}`);
      console.log('\nüåê –û—Ç–∫—Ä—ã—Ç—å –∫–æ–º–ø–∞–Ω–∏—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
      console.log(`   http://localhost:3000/companies/${companies[0].id}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    process.exit(1);
  }
}

listCompanies();