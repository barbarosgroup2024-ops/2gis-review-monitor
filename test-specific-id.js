/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ ID –∫–æ–º–ø–∞–Ω–∏–∏ 2GIS
 */

const { normalizeInput } = require('./server/utils/twoGisUrlBuilder.js');

const testId = '70000001033202845';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ID:', testId);
console.log('');

try {
  const result = normalizeInput(testId);
  console.log('‚úÖ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:');
  console.log('   ID –∫–æ–º–ø–∞–Ω–∏–∏:', result.companyId);
  console.log('   –ü–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π URL:', result.url);
  console.log('');
  
  console.log('üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...');
  console.log('');
  
  fetch(result.url)
    .then(response => response.json())
    .then(data => {
      if (data.meta) {
        console.log('‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç!');
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        console.log('   - –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤:', data.meta.total_count);
        console.log('   - –ü–æ–ª—É—á–µ–Ω–æ:', data.reviews?.length || 0);
        console.log('   - –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥:', data.meta.org_rating);
        console.log('');
        
        if (data.reviews && data.reviews.length > 0) {
          console.log('üìù –ü–µ—Ä–≤—ã–µ 3 –æ—Ç–∑—ã–≤–∞:');
          data.reviews.slice(0, 3).forEach((review, index) => {
            console.log(`   ${index + 1}. ${review.user?.name || '–ê–Ω–æ–Ω–∏–º'} - ${review.rating}‚≠ê`);
            const text = review.text || '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞';
            console.log(`      ${text.substring(0, 60)}${text.length > 60 ? '...' : ''}`);
            console.log('');
          });
        }
        
        console.log('============================================================');
        console.log('‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! ID –∫–æ–º–ø–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        console.log('');
        console.log('üí° –í—ã–≤–æ–¥: –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç–æ ID –∫–æ–º–ø–∞–Ω–∏–∏:');
        console.log(`   ${testId}`);
        console.log('');
        console.log('   –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç –ø–æ–ª–Ω—ã–π URL API.');
      } else if (data.error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ API:', data.error.message || JSON.stringify(data.error));
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç API:', JSON.stringify(data, null, 2));
      }
    })
    .catch(error => {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
      console.log('');
      console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   - –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
      console.log('   - API 2GIS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log('   - –ù–µ–≤–µ—Ä–Ω—ã–π ID –∫–æ–º–ø–∞–Ω–∏–∏');
    });
    
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:', error.message);
  console.log('');
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç ID –∫–æ–º–ø–∞–Ω–∏–∏ (–¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10-20 —Ü–∏—Ñ—Ä)');
}