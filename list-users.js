/**
 * –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Supabase
 * –ó–∞–ø—É—Å–∫: node list-users.js
 */

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û–®–ò–ë–ö–ê: SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function listUsers() {
  try {
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n');
    
    const { data: users, error } = await supabase
      .from('users')
      .select('*')
      .order('created_at', { ascending: false });

    if (error) throw error;

    if (!users || users.length === 0) {
      console.log('üì≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      console.log('\nüí° –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000/register');
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);
    console.log('‚ïê'.repeat(80));
    
    users.forEach((user, index) => {
      console.log(`\n${index + 1}. ${user.name} (${user.email})`);
      console.log(`   ID: ${user.id}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${user.status}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${new Date(user.created_at).toLocaleString('ru-RU')}`);
    });
    
    console.log('\n' + '‚ïê'.repeat(80));
    console.log('\nüí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
    console.log(`   node test-user-subscription.js ${users[0].email}`);
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    process.exit(1);
  }
}

listUsers();