/**
 * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
 * –ó–∞–ø—É—Å–∫: node add-test-reviews.js <companyId>
 */

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û–®–ò–ë–ö–ê: SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

const companyId = process.argv[2];

if (!companyId) {
  console.error('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –∫–æ–º–ø–∞–Ω–∏–∏');
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node add-test-reviews.js <companyId>');
  console.log('\nüí° –ü–æ–ª—É—á–∏—Ç–µ ID –∫–æ–º–ø–∞–Ω–∏–∏:');
  console.log('   1. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É: http://localhost:3000/login');
  console.log('   2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é');
  console.log('   3. ID –∫–æ–º–ø–∞–Ω–∏–∏ –≤ URL: /companies/<ID>');
  process.exit(1);
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–∞—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –¥–Ω–µ–π
function randomDate(daysAgo) {
  const now = new Date();
  const date = new Date(now.getTime() - Math.random() * daysAgo * 24 * 60 * 60 * 1000);
  return date.toISOString();
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã
const testReviews = [
  {
    two_gis_review_id: 'test_' + Date.now() + '_1',
    date_created: randomDate(0), // –°–µ–≥–æ–¥–Ω—è
    user_name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
    address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 10',
    rating: 5,
    review_text: '–û—Ç–ª–∏—á–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ! –í—Å—ë –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é!',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_2',
    date_created: randomDate(0), // –°–µ–≥–æ–¥–Ω—è
    user_name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
    address: '–ø—Ä. –ú–∏—Ä–∞, 25',
    rating: 4,
    review_text: '–•–æ—Ä–æ—à–æ, –Ω–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –±—ã—Å—Ç—Ä–µ–µ. –í —Ü–µ–ª–æ–º –¥–æ–≤–æ–ª–µ–Ω.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_3',
    date_created: randomDate(1), // –í—á–µ—Ä–∞
    user_name: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤',
    address: '—É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, 5',
    rating: 5,
    review_text: '–°—É–ø–µ—Ä! –í—Å—ë –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –±—É–¥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –µ—â—ë.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_4',
    date_created: randomDate(3), // 3 –¥–Ω—è –Ω–∞–∑–∞–¥
    user_name: '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    address: '—É–ª. –ü—É—à–∫–∏–Ω–∞, 15',
    rating: 3,
    review_text: '–ù–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –æ–∂–∏–¥–∞–ª –±–æ–ª—å—à–µ–≥–æ. –¶–µ–Ω—ã –≤—ã—Å–æ–∫–æ–≤–∞—Ç—ã.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_5',
    date_created: randomDate(5), // 5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    user_name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
    address: '–ø—Ä. –ü–æ–±–µ–¥—ã, 30',
    rating: 5,
    review_text: '–í—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_6',
    date_created: randomDate(7), // –ù–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥
    user_name: '–û–ª—å–≥–∞ –ù–æ–≤–∏–∫–æ–≤–∞',
    address: '—É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞, 8',
    rating: 4,
    review_text: '–•–æ—Ä–æ—à–µ–µ –º–µ—Å—Ç–æ, –ø—Ä–∏—è—Ç–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_7',
    date_created: randomDate(10), // 10 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    user_name: '–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤',
    address: '—É–ª. –ß–µ—Ö–æ–≤–∞, 12',
    rating: 5,
    review_text: '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –õ—É—á—à–µ–µ, —á—Ç–æ —è –≤–∏–¥–µ–ª.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_8',
    date_created: randomDate(15), // 15 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    user_name: '–ê–Ω–Ω–∞ –ú–æ—Ä–æ–∑–æ–≤–∞',
    address: '–ø—Ä. –õ–µ–Ω–∏–Ω–∞, 45',
    rating: 2,
    review_text: '–ù–µ –æ—á–µ–Ω—å. –î–æ–ª–≥–æ –∂–¥–∞–ª, –∫–∞—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥–Ω–µ–µ.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_9',
    date_created: randomDate(20), // 20 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    user_name: '–ü–∞–≤–µ–ª –°–æ–∫–æ–ª–æ–≤',
    address: '—É–ª. –ö–∏—Ä–æ–≤–∞, 20',
    rating: 5,
    review_text: '–û—Ç–ª–∏—á–Ω–æ! –í—Å—ë –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.',
    sent_to_telegram: false
  },
  {
    two_gis_review_id: 'test_' + Date.now() + '_10',
    date_created: randomDate(25), // 25 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    user_name: '–¢–∞—Ç—å—è–Ω–∞ –õ–µ–±–µ–¥–µ–≤–∞',
    address: '—É–ª. –ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ, 7',
    rating: 4,
    review_text: '–•–æ—Ä–æ—à–æ, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –¥—Ä—É–∑—å—è–º.',
    sent_to_telegram: false
  }
];

async function addTestReviews() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–º–ø–∞–Ω–∏—è
    const { data: company, error: companyError } = await supabase
      .from('companies')
      .select('*')
      .eq('id', companyId)
      .single();

    if (companyError) {
      if (companyError.code === 'PGRST116') {
        console.error('‚ùå –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        console.log('\nüí° –ü–æ–ª—É—á–∏—Ç–µ ID –∫–æ–º–ø–∞–Ω–∏–∏:');
        console.log('   1. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É: http://localhost:3000/login');
        console.log('   2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é');
        console.log('   3. ID –∫–æ–º–ø–∞–Ω–∏–∏ –≤ URL: /companies/<ID>');
        return false;
      }
      throw companyError;
    }

    console.log('‚úÖ –ö–æ–º–ø–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞:', company.company_name);
    console.log('\nüìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤...');

    let successCount = 0;
    let skipCount = 0;

    for (const review of testReviews) {
      const reviewData = {
        ...review,
        company_id: companyId
      };

      const { error } = await supabase
        .from('reviews')
        .insert([reviewData]);

      if (error) {
        if (error.code === '23505') {
          skipCount++;
          console.log('‚è≠Ô∏è  –û—Ç–∑—ã–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        }
      } else {
        successCount++;
        console.log(`‚úÖ –û—Ç–∑—ã–≤ –¥–æ–±–∞–≤–ª–µ–Ω: ${review.user_name} (${review.rating}‚≠ê)`);
      }
    }

    console.log('\n' + '‚ïê'.repeat(60));
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${successCount}`);
    if (skipCount > 0) {
      console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç): ${skipCount}`);
    }
    console.log('‚ïê'.repeat(60));

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤:');
    const { data: stats } = await supabase
      .from('review_stats')
      .select('*')
      .eq('company_id', companyId)
      .single();

    if (stats) {
      console.log(`   –í—Å–µ–≥–æ: ${stats.total_count}`);
      console.log(`   –°–µ–≥–æ–¥–Ω—è: ${stats.today_count}`);
      console.log(`   –í—á–µ—Ä–∞: ${stats.yesterday_count}`);
      console.log(`   –ó–∞ –Ω–µ–¥–µ–ª—é: ${stats.week_count}`);
      console.log(`   –ó–∞ –º–µ—Å—è—Ü: ${stats.month_count}`);
      console.log(`   –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: ${stats.avg_rating?.toFixed(1) || 0}`);
    }

    console.log('\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
    console.log(`   http://localhost:3000/companies/${companyId}`);
    
    return true;
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    return false;
  }
}

addTestReviews().then(success => {
  process.exit(success ? 0 : 1);
});